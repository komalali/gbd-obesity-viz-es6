{"version":3,"sources":["../../app/LinkedList.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","Node","data","_data","_next","get","set","newNode","LinkedList","_head","_length","value","_get","index","currentNode","head","count","next","insert","previousNode","append","shift","pop","remove","printList","reverse","myList","console","log"],"mappings":"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","file":"LinkedList.js","sourcesContent":["'use strict';\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n// LinkedList.js\n\nvar Node = function () {\n    function Node(data) {\n        _classCallCheck(this, Node);\n\n        this._data = data;\n        this._next = null;\n    }\n\n    _createClass(Node, [{\n        key: 'data',\n        get: function get() {\n            return this._data;\n        }\n    }, {\n        key: 'next',\n        get: function get() {\n            return this._next;\n        },\n        set: function set(newNode) {\n            this._next = newNode;\n        }\n    }]);\n\n    return Node;\n}();\n\nvar LinkedList = function () {\n    function LinkedList() {\n        _classCallCheck(this, LinkedList);\n\n        this._head = null;\n        this._length = 0;\n    }\n\n    _createClass(LinkedList, [{\n        key: '_get',\n        value: function _get(index) {\n            var currentNode = this.head;\n            var count = 0;\n\n            if (index > this.length) {\n                return 'Nothing exists at index ' + index + '.';\n            }\n            while (count < index) {\n                currentNode = currentNode.next;\n                count++;\n            }\n            return currentNode;\n        }\n    }, {\n        key: 'insert',\n        value: function insert(index, data) {\n            var previousNode = this._get(index - 1);\n            var currentNode = this._get(index);\n            var newNode = new Node(data);\n\n            previousNode.next = newNode;\n            newNode.next = currentNode;\n        }\n    }, {\n        key: 'append',\n        value: function append(data) {\n            var newNode = new Node(data);\n            var currentNode = this.head;\n            // if there are no nodes\n            if (!currentNode) {\n                this.head = newNode;\n                this._length++;\n\n                return currentNode;\n            }\n            // if there are nodes loop until you find the end\n            while (currentNode.next) {\n                currentNode = currentNode.next;\n            }\n            // add the node once you get to the end of the list\n            currentNode.next = newNode;\n            this._length++;\n            return newNode;\n        }\n    }, {\n        key: 'shift',\n        value: function shift(data) {}\n    }, {\n        key: 'pop',\n        value: function pop(index) {\n            var previousNode = this._get(index - 1);\n            var currentNode = this._get(index);\n\n            previousNode.next = this._get(index + 1);\n\n            return currentNode.data;\n        }\n    }, {\n        key: 'remove',\n        value: function remove(index) {}\n    }, {\n        key: 'printList',\n        value: function printList() {\n            var printList = '[';\n            var currentNode = this.head;\n            if (!currentNode) {\n                return 'There\\'s nothing in your list!';\n            } else {\n                while (currentNode.next) {\n                    printList += currentNode.data + ', ';\n                    currentNode = currentNode.next;\n                }\n                printList += currentNode.data + ']';\n                return printList;\n            }\n        }\n    }, {\n        key: 'reverse',\n        value: function reverse() {}\n    }, {\n        key: 'head',\n        get: function get() {\n            return this._head;\n        },\n        set: function set(data) {\n            this._head = data;\n        }\n    }, {\n        key: 'length',\n        get: function get() {\n            return this._length;\n        }\n    }]);\n\n    return LinkedList;\n}();\n\nvar myList = new LinkedList();\nmyList.append('foo');\nmyList.append('bar');\nmyList.append('baz');\nmyList.insert(1, 'bums');\nconsole.log(myList.printList());\nconsole.log(myList.pop(2));\nconsole.log(myList.printList());\n//# sourceMappingURL=LinkedList.js.map\n//# sourceMappingURL=LinkedList.js.map"]}